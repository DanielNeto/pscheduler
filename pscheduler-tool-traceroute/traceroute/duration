#!/usr/bin/python
#
# Determine the duration of a specified test.
#

import datetime
import sys

import pscheduler

spec = pscheduler.json_load(exit_on_error=True);

# TODO: Make sure the type is one we like
# TODO: Validate the spec

total = datetime.timedelta()

#
# Traceroute time
#

try:
    hops = spec['hops']
except KeyError:
    hops = 30


try:
    send_wait = pscheduler.iso8601_as_timedelta(spec['send-wait'])
    total += send_wait * hops
except KeyError:
    # Program default is zero.
    pass


try:
    total += pscheduler.iso8601_as_timedelta(spec['wait'])
except KeyError:
    # This is the program's default
    send_wait = datetime.timedelta(seconds=5)


# TODO: Need to consider time for AS resolution.  1S per hop?


#
# DNS Resolution
#

try:
    hostnames = spec['hostnames']
except KeyError:
    hostnames = True

# Some time for DNS, which will be done in parallel.
if hostnames:
    total += datetime.timedelta(seconds=5)


#
# Slop
#

total += datetime.timedelta(seconds=2)

print pscheduler.timedelta_as_iso8601(total)

pscheduler.succeed()
