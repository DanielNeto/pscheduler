Index: pscheduler-server/database/db-change-password.raw
===================================================================
--- pscheduler-server.orig/database/db-change-password.raw	2017-10-02 17:18:19.000000000 +0200
+++ pscheduler-server/database/db-change-password.raw	2017-10-02 17:19:56.000000000 +0200
@@ -9,42 +9,9 @@
     exit 1
 fi
 
-
-TMPBASE=${TMP:=/tmp}/$(basename $0).$$
-
-cleanup()
-{
-    rm -rf $TMPBASE*
-}
-trap cleanup EXIT
-
-
 [ -t 0 -a -t 1 -a -t 2 ] && INTERACTIVE=true || INTERACTIVE=false
 
-
-# Generate the new password and write it to the config files
-
-# Password
-random-string --safe --length 60 --randlength > '__PASSWORDFILE__'
-
-# DSN
-cat > '__DSNFILE__' <<EOF
-host=127.0.0.1 dbname=__DATABASE__ user=__ROLE__ password=$(cat '__PASSWORDFILE__')
-EOF
-
-# Pg Password
-cat > '__PGPASSFILE__' <<EOF
-*:*:__DATABASE__:__ROLE__:$(cat '__PASSWORDFILE__')
-EOF
-
-
-# Change it in the database
-
-ROLESQL="${TMPBASE}.rolesql"
-touch "${ROLESQL}"
-chmod 400 "${ROLESQL}"
-
-cat > "${ROLESQL}" <<EOF
+su -l -c psql postgres <<EOF >/dev/null
 DO \$\$
 BEGIN
     PERFORM pg_terminate_backend(pg_stat_activity.pid)
@@ -59,11 +26,9 @@
 \$\$ LANGUAGE plpgsql;
 EOF
 
-printf "ALTER ROLE __ROLE__ WITH UNENCRYPTED PASSWORD '" > "${ROLESQL}"
-tr -d "\n" < "__PASSWORDFILE__" >> "${ROLESQL}"
-printf "';\n"  >> "${ROLESQL}"
-
-postgresql-load "${ROLESQL}"
+# Reinstalling the database will generate a new password
+echo SET pscheduler-server/dbconfig-reinstall true | debconf-communicate >/dev/null
+DEBIAN_FRONTEND=noninteractive dpkg-reconfigure --priority=critical pscheduler-server
 
 if $INTERACTIVE
 then
