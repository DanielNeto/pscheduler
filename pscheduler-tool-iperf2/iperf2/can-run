#!/usr/bin/python
#
# Determine if this tool can run a test based on a test spec.
#

import datetime
import sys

import pscheduler

logger = pscheduler.Log(prefix='tool-iperf')

json = pscheduler.json_load(exit_on_error=True)

logger.info("can-run for %s" % json)

if not json.get('type'):
    pscheduler.fail('Missing test type')

if json['type'] != 'throughput':
    pscheduler.fail('Unsupported test type')

if not json.get('spec'):
    pscheduler.fail('Missing test spec')

test_spec = json['spec']
    
if test_spec.has_key('bandwidth') and not test_spec.has_key('udp'):
    pscheduler.fail('iperf cannot run TCP tests with throttled bandwidth')

if test_spec.has_key('omit'):
    pscheduler.fail('iperf does not support the --omit flag')

if test_spec.has_key('flow-label'):
    pscheduler.fail('iperf does not support the --flow-label flag')

if test_spec.has_key('zero-copy'):
    pscheduler.fail('iperf does not support the --zero-copy flag')

if test_spec.has_key('congestion'):
    pscheduler.fail('iperf does not support the --congestion flag')

if test_spec.has_key('client-cpu-affinity') or test_spec.has_key('server-cpu-affinity'):
    pscheduler.fail('iperf does not support the --client-cpu-affinity or --server-cpu-affinity flag')

if test_spec.has_key('no-delay'):
    pscheduler.fail('iperf does not support the --no-delay flag')

logger.debug("can-run succeeded")

pscheduler.succeed()
