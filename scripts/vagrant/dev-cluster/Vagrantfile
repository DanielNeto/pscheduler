#
# Vagrant Configuration for a pScheduler Development System
#
# See README.md for use and care.
#

# Customize the following to taste:

# Operating system.  These are the two favorites; see the "boxes" hash
# below for a full list of valid values.
os = "centos7"
#os = "debian9"

# Prefix for VM host names.  This should be unique across clusters on
# the same host.
host_prefix = "psdev"

# How many VMs to build
cluster_size = 1

# Resources given to each VM
cpus = 2
memory = 2048

# Paths to Ansible playbooks to run after each system is configured
additional_playbooks = [
  # Example: "#{ENV['HOME']}/ansible/my-stuff.yml"
]



# ------------------------------------------------------------------------------
# No user-serviceable parts below this point.
# ------------------------------------------------------------------------------

require 'etc'

boxes = Hash[
  # RedHat and Derivatives
  "centos7" => "bento/centos-7",
  "centos8" => "bento/centos-8",
  "oracle7" => "generic/oracle7",
  "oracle8" => "generic/oracle8",
  "rhel7" => "generic/rhel7",
  "rhel8" => "generic/rhel8",
  # Debian and Derivatives
  "debian8" => "generic/debian8",
  "debian9" => "generic/debian9",
  "debian10" => "generic/debian10",
  "ubuntu16" => "ubuntu/xenial64",
  "ubuntu18" => "ubuntu/bionic64",
  "ubuntu20" => "ubuntu/focal64",
]



if not boxes.has_key?(os)
  raise "OS '#{os}' is not supported."
end

box = boxes[os]



# Machines to build

private_network = "pscheduler-#{host_prefix}"

Vagrant.configure("2") do |config|

  (1..cluster_size).each do |host_number|

    host_name = "#{host_prefix}#{host_number}"

    config.vm.define host_name do |host|

      if Vagrant.has_plugin?("vagrant-vbguest")
        # Don't allow upgrades; the box has what it has.
        config.vbguest.auto_update = false
      end


      # System

      host.vm.box = box
      host.vm.hostname = host_name
      
      host.vm.provider "virtualbox" do |vbox|
        # The default E1000 has a security vulerability.
        vbox.default_nic_type = "82543GC"
        vbox.cpus = cpus
        vbox.memory = memory
      end

      # Networking
     
      host.vm.network "private_network",
                      # This is a dummy address that will be replaced by Ansible.
                      ip: "10.222.222.222",
                      netmask: "255.255.255.0",
                      virtualbox__intnet: private_network

      # User Account

      acct = Etc.getpwnam(Etc.getlogin)
      home_dir = "/home/#{acct.name}"

      # Note that using the same owner and group is intentional.
      host.vm.synced_folder "#{acct.dir}/", home_dir,
                            automount: true,
                            mount_options: ["uid=#{acct.uid}", "gid=#{acct.uid}"],
                            SharedFoldersEnableSymlinksCreate: true

      # Setup

      ansible_extra_vars = {
        cluster_size: cluster_size,
        host_name: host_name,
        host_number: host_number,
        host_prefix: host_prefix,
        user: acct.name,
        user_gecos: acct.gecos,
        user_uid: acct.uid,
        user_gid: acct.gid,
        user_shell: acct.shell
      }

      host.vm.provision "#{host_name}-ansible", type: "ansible", run: "always" do |ansible|
        ansible.playbook = "ansible/main.yml"
        ansible.verbose = true
        ansible.extra_vars = ansible_extra_vars
      end
      
      additional_playbooks.each do |playbook|
        host.vm.provision "#{host_name}-ansible-#{playbook}", type: "ansible", run: "always" do |ansible|
          ansible.playbook = playbook
          ansible.verbose = true
          ansible.extra_vars = ansible_extra_vars
      end  # additional_playbooks.each

      end  # (1..cluster_size).each

    end  # config.vm.define

  end  # hosts.each

end


# -*- mode: ruby -*-
# vi: set ft=ruby :
