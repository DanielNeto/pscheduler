#!/usr/bin/python
#
# Convert a test specification to command-line options

import pscheduler
import jsonschema
from owdelay_utils import load_schema

#constants
SCHEMA_FILE = "pscheduler-schema-owdelay-request.json"

#load spec JSON
spec = pscheduler.json_load(exit_on_error=True)
if type(spec) != dict:
    pscheduler.fail("Invalid JSON for this operation")

#load and validate against schema
schema = load_schema(SCHEMA_FILE)
try:
    jsonschema.validate(spec, schema, format_checker=jsonschema.FormatChecker())
except Exception, e:
    pscheduler.fail("Invalid owdelay test specification: %s" % e.message)
schema_props = schema.get('properties', {})
if not schema_props:
    pscheduler.fail("Error retrieving schema properties")

#build command-line from schema
result = []
for prop in schema_props:
    if prop in spec:
        if prop == "schema":
            continue
        elif prop == "ip-version":
            result.append("--%d" % spec[prop])
        elif schema_props[prop].get('type', '') == "boolean":
            result.append("--%s" % prop)
        else:
            result.append("--%s" % prop)
            result.append("%s" % spec[prop])

pscheduler.succeed_json(result)


