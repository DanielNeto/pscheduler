#!/usr/bin/python
#
# Participant list generator for 'trace' test spec
#

import pscheduler
import sys

from validate import spec_is_valid

json = pscheduler.json_load(exit_on_error=True)

null_reason = None

valid, message = spec_is_valid(json)

if not valid:
    pscheduler.fail(message)

if "source" in json:
    source = json["source"]
else:
    source = None
    null_reason = "No source specified"


######################################################################
#Backward Compatibility Code: We can remove this once we drop BWCTL
#
# Check that both sides have pScheduler and do the following:
# * if source has pscheduler, proceed as normal (i.e. use source as only participant)
# * otherwise if dest has pscheduler use that instead
# * otherwise fail the test if no one has pscheduler
def has_pscheduler(address):
    #null participant means localhost, which means has psc by definition
    if address is None:
        return True
    
    # Ask the server for something really basic.
    status, raw_spec = pscheduler.url_get(
                                            pscheduler.api_url( host=address,
                                                                path='hostname'),
                                            throw=False
                                        )
    return status == 200

participants = []
if "dest" in json:
    destination = json["dest"]
else:
     pscheduler.fail("Missing required field dest")
    
if source is None or has_pscheduler(source):
    participants = [ source ]
elif has_pscheduler(destination):
    participants = [ destination ]
else:
    pscheduler.fail("Neither the source nor destination is running pScheduler.")
######################################################################

result = { "participants": participants }
if null_reason is not None:
    result["null-reason"] = null_reason

pscheduler.succeed_json(result)
