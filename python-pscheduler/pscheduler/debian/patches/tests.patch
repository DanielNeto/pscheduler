--- pscheduler.orig/tests/ipaddr_test.py	2019-04-11 14:37:30.358161000 +0000
+++ pscheduler/tests/ipaddr_test.py	2019-04-11 14:39:23.030849000 +0000
@@ -42,7 +42,7 @@
         self.assertEqual(ip_addr_version('::1/32'), (6, '::1'))
         self.assertEqual(ip_addr_version('::1/32', resolve=False), (6, '::1'))
 
-        self.assertEqual(ip_addr_version('::1/quack'), (None, 'Name or service not known'))
+        self.assertEqual(ip_addr_version('::1/quack'), (None, 'No address associated with hostname'))
         self.assertEqual(ip_addr_version('::1/quack', resolve=False), (None, None))
 
         # By Address Family
@@ -62,7 +62,7 @@
         self.assertEqual(ip_addr_version('::1/32', family=True), (socket.AF_INET6, '::1'))
         self.assertEqual(ip_addr_version('::1/32', resolve=False, family=True), (socket.AF_INET6, '::1'))
 
-        self.assertEqual(ip_addr_version('::1/quack', family=True),(None, 'Name or service not known'))
+        self.assertEqual(ip_addr_version('::1/quack', family=True),(None, 'No address associated with hostname'))
         self.assertEqual(ip_addr_version('::1/quack', resolve=False, family=True), (None, None))
 
         # By DNS name.  These are guaranteed to be stable as long as
--- pscheduler.orig/tests/psurl_test.py	2019-04-11 14:37:30.358176000 +0000
+++ pscheduler/tests/psurl_test.py	2019-04-11 14:39:43.076759000 +0000
@@ -21,7 +21,7 @@
         no_scheme = "no-scheme"
 
         (status, _) = url_get(no_scheme, json=False, throw=False)
-        self.assertEqual(status, 400)
+        self.assertEqual(status, 503)
 
         self.assertRaises(pscheduler.URLException, url_get, no_scheme, json=False, throw=True)
 
